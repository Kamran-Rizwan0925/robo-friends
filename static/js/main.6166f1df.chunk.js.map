{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","this","robots","map","robot","i","React","Component","Scroll","children","SearchBox","searchField","searchChange","type","placeholder","onChange","ErrorBoundary","onSearchChange","event","setState","searchfield","target","value","state","hasError","error","info","App","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAfF,SAAAC,GAAU,IACXC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACrB,OACE,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAK,wBAAyBH,EAAI,aAClD,gCACI,6BAAKF,IACL,4BAAIC,WCQHK,E,4JAbb,WACE,OACE,8BACGC,KAAKR,MAAMS,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACrB,cAAC,EAAD,CAAcT,GAAIQ,EAAMR,GAAIF,KAAMU,EAAMV,KAAMC,MAAOS,EAAMT,OAAhDU,Y,GANEC,IAAMC,WCMdC,EARA,SAACf,GACZ,OACI,8BACKA,EAAMgB,YCUJC,EAXG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACA,qBAAKf,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVgB,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCsB3CI,E,kDA1Bb,WAAavB,GAAQ,IAAD,8BAClB,cAAMA,IAURwB,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAV1C,EAAKC,MAAQ,CACZC,UAAU,GAHO,E,qDAOpB,SAAkBC,EAAOC,GACrBzB,KAAKkB,SAAS,CAAEK,UAAU,M,oBAO9B,WAEE,OAAIvB,KAAKsB,MAAMC,SACN,0DAEFvB,KAAKR,MAAMgB,a,GArBMH,IAAMC,WCuDnBoB,G,wDAlDb,aAAgB,IAAD,8BACb,gBAmBFV,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAnB1C,EAAKC,MAAQ,CACXrB,OAAQ,GACRkB,YAAa,IAJF,E,qDAQf,WAAqB,IAAD,OAClBQ,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKb,SAAS,CACZjB,OAAQ8B,S,oBASd,WAAS,IAAD,OACAC,EAAiBhC,KAAKsB,MAAMrB,OAAOgC,QAAO,SAAAhC,GAC9C,OAAOA,EAAOR,KAAKyC,cAAcC,SAAS,EAAKb,MAAMH,YAAYe,kBAEnE,OAAiC,IAA7BlC,KAAKsB,MAAMrB,OAAOmC,OACb,yCAGL,sBAAKxC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWe,aAAcX,KAAKgB,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUf,OAAQ+B,e,GAtCd3B,IAAMC,YCKT+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6166f1df.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nconst Card = props => {\r\n    const { name, email, id} = props;\r\n    return (\r\n      <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n          <img alt=\"Card\" src={\"https://robohash.org/\"+ id +\"?200x200\"} />\r\n          <div>\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n          </div>\r\n        \r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default Card;\r\n","\r\nimport React from 'react'\r\nimport Card from './Card';\r\nclass CardList extends React.Component {\r\n  \r\n  render(){\r\n    return (\r\n      <div>\r\n        {this.props.robots.map((robot, i) => \r\n          <Card key={i} id={robot.id} name={robot.name} email={robot.email}></Card>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","\r\nimport React from 'react'\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n    return (\r\n    <div className='pa2'>\r\n      <input \r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type=\"search\" placeholder=\"Search Robots\" onChange={searchChange} />\r\n    </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default SearchBox;\r\n","\r\nimport React from 'react'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n     hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n      this.setState({ hasError: true })        \r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n    \r\n  }\r\n  render(){\r\n  \r\n    if( this.state.hasError  ) {\r\n      return <h1>Ooops, that is not good!</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n  \r\n  \r\n}\r\n\r\nexport default ErrorBoundary;\r\n","\nimport React from 'react'\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json()\n    })\n    .then(users => {\n      this.setState({\n        robots: users\n      })\n    })    \n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n    \n  }\n  render(){\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    }) \n    if( this.state.robots.length === 0) {\n      return <h1>Loading</h1>\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange}></SearchBox>\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots}></CardList>\n            </ErrorBoundary>\n            \n          </Scroll>\n          \n        </div>\n      );\n    }\n  }\n  \n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}